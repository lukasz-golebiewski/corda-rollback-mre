apply plugin: 'kotlin'
apply plugin: 'net.corda.plugins.cordapp'
apply plugin: 'net.corda.plugins.quasar-utils'

buildscript {
    ext {
        corda_release_group = 'net.corda'
        corda_release_version = '4.10.4'
        corda_gradle_plugins_version = '5.0.14'
        kotlin_version = '1.4.0'
        junit_version = '4.13.2'
        mockk_version = '1.12.2'
        quasar_version = '0.7.14_r3'
        slf4j_version = '2.0.4'
        log4j_version = '2.19.0'
        minimum_corda_platform_version = '5'
        target_corda_platform_version = '12'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url 'https://download.corda.net/maven/corda-releases'
        }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "net.corda.plugins:cordapp:$corda_gradle_plugins_version"
        classpath "net.corda.plugins:quasar-utils:$corda_gradle_plugins_version"
        //classpath "net.linguica.gradle:maven-settings-plugin:0.5"
    }
}

allprojects {
    apply from: "${rootProject.projectDir}/repositories.gradle"

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
        kotlinOptions {
            languageVersion = "1.2"
            apiVersion = "1.2"
            jvmTarget = "1.8"
            javaParameters = true   // Useful for reflection.
            freeCompilerArgs = ['-Xjvm-default=enable']
        }
    }
}

dependencies {
    // Kotlin.
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    // Corda dependencies.
    cordaCompile "$corda_release_group:corda-core:$corda_release_version"
    cordaCompile "$corda_release_group:corda-jackson:$corda_release_version"
    cordaRuntime "$corda_release_group:corda:$corda_release_version"

    // Test dependencies.
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testImplementation "junit:junit:$junit_version"
    testImplementation "$corda_release_group:corda-node-driver:$corda_release_version"
    testImplementation "io.mockk:mockk:$mockk_version"
}

cordapp {
    targetPlatformVersion target_corda_platform_version.toInteger()
    minimumPlatformVersion minimum_corda_platform_version.toInteger()
    workflow {
        name "Test"
        vendor "Test"
        licence "Free"
        versionId 1
    }
    signing {
        enabled false
    }
    sealing {
        enabled false
    }
}
configurations {
    testOutput
}

dependencies {
    testOutput sourceSets.test.output
}
